// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sams.Data;

namespace Sams.Data.Migrations
{
    [DbContext(typeof(SamsContext))]
    partial class SamsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sams.Data.DataModels.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Sams.Data.DataModels.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("AppUser");
                });

            modelBuilder.Entity("Sams.Data.DataModels.CustomerCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CVV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cardHolerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("expirationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mainCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomerCards");
                });

            modelBuilder.Entity("Sams.Data.DataModels.DaySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("DaySchedules");
                });

            modelBuilder.Entity("Sams.Data.DataModels.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("itemImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("itemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("itemPrice")
                        .HasColumnType("real");

                    b.Property<string>("itemType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int?>("chefPreferancesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.HasIndex("chefPreferancesId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Sams.Data.DataModels.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppUserId")
                        .HasColumnType("int");

                    b.Property<string>("number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("PhoneNumbers");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("latitude")
                        .HasColumnType("float");

                    b.Property<double>("longitude")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Point");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("tableNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<int?>("ExecutiveId")
                        .HasColumnType("int");

                    b.Property<string>("contactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("hoursId")
                        .HasColumnType("int");

                    b.Property<bool>("isHeadquarter")
                        .HasColumnType("bit");

                    b.Property<int?>("locationId")
                        .HasColumnType("int");

                    b.Property<byte[]>("tableMapImage")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ExecutiveId");

                    b.HasIndex("hoursId");

                    b.HasIndex("locationId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExecutiveId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExecutiveId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Sams.Data.DataModels.TimeSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("TimeSets");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Chef", b =>
                {
                    b.HasBaseType("Sams.Data.DataModels.AppUser");

                    b.Property<string>("chefDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("shiftId")
                        .HasColumnType("int");

                    b.HasIndex("shiftId");

                    b.HasDiscriminator().HasValue("Chef");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Customer", b =>
                {
                    b.HasBaseType("Sams.Data.DataModels.AppUser");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int?>("cardInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("locationId")
                        .HasColumnType("int");

                    b.HasIndex("ReservationId");

                    b.HasIndex("cardInfoId");

                    b.HasIndex("locationId");

                    b.HasDiscriminator().HasValue("Customer");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Executive", b =>
                {
                    b.HasBaseType("Sams.Data.DataModels.AppUser");

                    b.HasDiscriminator().HasValue("Executive");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Manager", b =>
                {
                    b.HasBaseType("Sams.Data.DataModels.AppUser");

                    b.Property<int?>("managerResraurantId")
                        .HasColumnType("int");

                    b.Property<int?>("shiftId")
                        .HasColumnType("int")
                        .HasColumnName("Manager_shiftId");

                    b.HasIndex("managerResraurantId");

                    b.HasIndex("shiftId");

                    b.HasDiscriminator().HasValue("Manager");
                });

            modelBuilder.Entity("Sams.Data.DataModels.DaySchedule", b =>
                {
                    b.HasOne("Sams.Data.DataModels.Schedule", null)
                        .WithMany("weekSchedule")
                        .HasForeignKey("ScheduleId");
                });

            modelBuilder.Entity("Sams.Data.DataModels.MenuItem", b =>
                {
                    b.HasOne("Sams.Data.DataModels.Order", null)
                        .WithMany("orderItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("Sams.Data.DataModels.Restaurant", null)
                        .WithMany("menuItems")
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Order", b =>
                {
                    b.HasOne("Sams.Data.DataModels.Reservation", null)
                        .WithMany("orders")
                        .HasForeignKey("ReservationId");

                    b.HasOne("Sams.Data.DataModels.Chef", "chefPreferances")
                        .WithMany()
                        .HasForeignKey("chefPreferancesId");

                    b.Navigation("chefPreferances");
                });

            modelBuilder.Entity("Sams.Data.DataModels.PhoneNumber", b =>
                {
                    b.HasOne("Sams.Data.DataModels.AppUser", null)
                        .WithMany("contactNumbers")
                        .HasForeignKey("AppUserId");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Restaurant", b =>
                {
                    b.HasOne("Sams.Data.DataModels.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("Sams.Data.DataModels.Executive", null)
                        .WithMany("restaurants")
                        .HasForeignKey("ExecutiveId");

                    b.HasOne("Sams.Data.DataModels.Schedule", "hours")
                        .WithMany()
                        .HasForeignKey("hoursId");

                    b.HasOne("Sams.Data.DataModels.Point", "location")
                        .WithMany()
                        .HasForeignKey("locationId");

                    b.Navigation("Address");

                    b.Navigation("hours");

                    b.Navigation("location");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Schedule", b =>
                {
                    b.HasOne("Sams.Data.DataModels.Executive", null)
                        .WithMany("allRestaurantHours")
                        .HasForeignKey("ExecutiveId");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Chef", b =>
                {
                    b.HasOne("Sams.Data.DataModels.Schedule", "shift")
                        .WithMany()
                        .HasForeignKey("shiftId");

                    b.Navigation("shift");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Customer", b =>
                {
                    b.HasOne("Sams.Data.DataModels.Reservation", null)
                        .WithMany("customers")
                        .HasForeignKey("ReservationId");

                    b.HasOne("Sams.Data.DataModels.CustomerCard", "cardInfo")
                        .WithMany()
                        .HasForeignKey("cardInfoId");

                    b.HasOne("Sams.Data.DataModels.Point", "location")
                        .WithMany()
                        .HasForeignKey("locationId");

                    b.Navigation("cardInfo");

                    b.Navigation("location");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Manager", b =>
                {
                    b.HasOne("Sams.Data.DataModels.Restaurant", "managerResraurant")
                        .WithMany()
                        .HasForeignKey("managerResraurantId");

                    b.HasOne("Sams.Data.DataModels.Schedule", "shift")
                        .WithMany()
                        .HasForeignKey("shiftId");

                    b.Navigation("managerResraurant");

                    b.Navigation("shift");
                });

            modelBuilder.Entity("Sams.Data.DataModels.AppUser", b =>
                {
                    b.Navigation("contactNumbers");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Order", b =>
                {
                    b.Navigation("orderItems");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Reservation", b =>
                {
                    b.Navigation("customers");

                    b.Navigation("orders");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Restaurant", b =>
                {
                    b.Navigation("menuItems");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Schedule", b =>
                {
                    b.Navigation("weekSchedule");
                });

            modelBuilder.Entity("Sams.Data.DataModels.Executive", b =>
                {
                    b.Navigation("allRestaurantHours");

                    b.Navigation("restaurants");
                });
#pragma warning restore 612, 618
        }
    }
}
